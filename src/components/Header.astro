---
const navItems = [
  {
    title: "Sobre m√≠",
    label: "sobre-mi",
    url: "/#sobre-mi",
  },

  {
    title: "Proyectos",
    label: "proyectos",
    url: "/#proyectos",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "mailto:pabrisdev@gmail.com",
  },
];
---

<header
  class="fixed top-2 z-10 flex items-center justify-center w-full mx-auto mt-2"
>
  <nav class="flex flex-row gap-x-10 opacity-90 rounded-md">
    {
      navItems.map((item) => (
        <a
          class="relative block px-2 py-2 text-violet-400 transition"
          href={item.url}
          aria-label={item.label}
        >
          {item.title}
        </a>
      ))
    }
  </nav>
</header>
<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur bg-gray-800/60 ring-white/5;
    }
  }
</style>
<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav a");

    const callback = (entries: any[]) => {
      
      entries.forEach((entry) => {
        // console.log(entry)
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (entry.target.id === item.getAttribute("aria-label")) {
              item.classList.replace("text-violet-400", "text-lime-300")
            } else {
              item.classList.replace("text-lime-300", "text-violet-400")
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.2,
    });

    // Observar los sections
    sections.forEach((section) => {
      observer.observe(section);
    });
  });
</script>
